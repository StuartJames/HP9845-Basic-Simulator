 10 ! THIS PROGRAM DEMONSTRATES THE USE OF THE DIGITIZE STATEMENT. SEVERAL
 20 ! LINES ARE DRAWN ON THE CRT. YOU CAN FIND THE COORDINATES OF ANY POINT
 30 ! BY POSITIONING THE CURSOR OVER THE POINT AND THEN PRESSING THE CONTINUE
 40 ! KEY. NOTE: TO CHANGE CURSOR TYPE PRESS SPECIAL FUNCTION KEY #0.
 50 !
 60 PRINTER IS 0                        ! SPECIFY PRINTOUT DEVICE.
 70 FIXED 2                             ! SPECIFY FIXED 2 FOR PRINTOUT.
 80 PLOTTER IS 13,"GRAPHICS"            ! SPECIFY CRT AS PLOTTER.
 90 GRAPHICS                            ! SET CRT GRAPHICS MODE.
100 FRAME                               ! FRAME PLOTTING AREA.
110 !
120 ON KEY #0 GOSUB Change_cursor       ! PRESS KEY #0 TO CHANGE CURSOR TYPE. 
130 Cursor_type=0                       ! INTIALISE CURSOR_TYPE VARIABLE.
140 !
150 ! ***** DRAW A LINE TO GDU 100,100 FOR THIS EXAMPLE.
160 DRAW 100,100
170 !
180 ! ***** DRAW A TRIANGLE FOR THIS EXAMPLE.
190 MOVE 60,50
200 DRAW 80,10
210 DRAW 40,10
220 DRAW 60,50
230 !
240 ! ***** INTIALISE CURSOR POSITION AND TYPE.
250 POINTER 50,40,Cursor_type           ! POSITION CURSOR.
260 !
270 !
280 ! ***** LOOP TO DIGITIZE POINTS ON THE CRT.
290 Loop1: !
300 DIGITIZE X,Y,A$                     ! INPUT CURSOR COORDINATES & PEN STATUS.
310 IF Cursor_type<>Old_cursor_type THEN GOTO 330 ! SKIP PRINTOUT IF CURSOR CHANGE.
320 PRINT X,Y,A$                        ! PRINT COORDINATE.
330 Old_cursor_type=Cursor_type         ! ASSIGN VALUE TO OLD CURSOR_TYPE.
340 GOTO Loop1                          ! DO IT AGAIN, FOREVER.
350 END
360 !
370 ! ***** CHANGE CURSOR TYPE WHEN KEY #0 IS PRESSED.
380 Change_cursor: !
390 Cursor_type=NOT Cursor_type         ! CHANGE CURSOR TYPE VARIABLE.
400 CURSOR Xc,Yc,A$                     ! FIND CURRENT CURSOR COORDINATES.
410 POINTER Xc,Yc,Cursor_type           ! REPLACE CURSOR WITH NEW TYPE.
420 RETURN                              ! RETURN TO LOOP.  
