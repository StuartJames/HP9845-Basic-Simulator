10   ! ************  CHESS  **************  2/18/7820   ! ******** GRAPHICS VERSION *********30   OPTION BASE 140   INTEGER B8,K8,B,K6,K7,S1,S2,S8,S9,A8,F8,Z4,C7,Q450   INTEGER M(120),V(7),B(6),P(24),G(77),A(125),E(78),H(78),Old(120),Change(64)60   INTEGER N(78),Y(78),T(78),Value(13),Book(7,6)70   SHORT L(6,3),W(78),S(78),O(78),D(78),X(78)80   DIM X$[8],F$[16],A$[8],H$[8]90   COM Piece$(12)[120],Erase$[120],L6100  X$="12345678"110  A$="-PNBRQK "120  B$="-PNBRQKpnbrqk"130  ASSIGN #1 TO "PIECE$", FileRet140  ASSIGN #2 TO "CHSGME"150  READ #1;Piece$(*),Erase$160  RESTORE 170  MAT READ M,V,B,P,G,Value,Book              ! SET UP STARTING BOARD180  PRINTER IS 16190  INPUT "DO YOU NEED INSTRUCTIONS ?",F$200  IF F$[1,1]="Y" THEN GOSUB Instructions210  INPUT "START NEW GAME?",Ques$220  IF Ques$[1,1]="N" THEN 3370230  INPUT "TO PLAY BLACK ENTER -1, WHITE 1",L6240 Replay:  K8=Z4=Moov=0250   A5=1260   A9=-L6270   MAT L=(0)280   MAT X=(0)290   MAT A=(0)300  IF L6<>-1 THEN 360310  M(26)=5                                    ! SET UP KINGS & QUEENS320  M(25)=6330  M(96)=-5340  M(95)=-6350  H(35)=-1360  GOSUB New_board370  IF L6<>1 THEN Go                           ! COMPUTER MAKES 1st MOVE IF WHITE380 Cont_game: H5=0                             ! EVAL. PLAYER'S LEGAL MOVES390  GOSUB Move_gen400  IF E(K2-21)<=0 THEN 430410  PRINT "     CHECK"420  PRINT 430  GOSUB Board440 Your_move: ! 450  PRINT LIN(1);"PRESS CONT TO MAKE YOUR MOVE .... "	460  BEEP470  GRAPHICS480  WAIT 1000490  INPUT "YOUR MOVE?",F1,F2                   ! FROM (SQ. #) , TO (SQ. #)500  IF (F1=9) OR (F1=11) THEN GOTO Castle 510  R5=100*F1+F2                               ! MOVE FUNCTION FOR TABLE LOOK UP520  FOR I3=1 TO K7                             !  CHECK FOR LEGAL MOVE530  IF A(I3)=R5 THEN 660                       ! GOT A LEGAL MOVE - A(*)=LIST OF LEGAL MOVES540  NEXT I3                                    ! ((FROM SQ)*100)+ TO SQ)550  IF (F1<>99) OR (F2<>99) THEN 630560  READ #2,1570  PRINT #2;M(*),L6580  EXIT GRAPHICS590  DISP "GAME HAS BEEN SAVED ON 'CHSGME'"600  BEEP610  PRINTER IS 16620  END630 Illegal:  PRINT "ILLEGAL MOVE - TRY AGAIN"640           BEEP650           GOTO Your_move660  IF M(F1)<>-6 THEN Trial                    ! IF NOT THE KING BEING MOVED670  IF E(F2-21)<=0 THEN Move_ok                ! IS KING MOVING INTO CHECK680  PRINT LIN(1);"ILLEGAL MOVE - YOU CAN'T MOVE INTO CHECK"690  BEEP700  GOTO Your_move !710 Trial:   M(F2)=M(F1)                        ! TEST FOR UNCOVERED CHECK720          M(F1)=0730          GOSUB Move_gen740          IF E(K2-21)<=0 THEN Ok750          M(F1)=M(F2)760          M(F2)=0770          PRINT LIN(1);"ILLEGAL MOVE - UNCOVERED CHECK"780          BEEP790          GOSUB Move_gen800          GOTO Your_move810 Move_ok:   M(F2)=M(F1)                      ! MAKE THE MOVE820            M(F1)=0830 Ok: ! 840  GOSUB Board850 Begin:  ! START860  FOR I=22 TO 29                             ! CHECK FOR PLAYER PAWN PROMOTION870    IF M(I)<>-1 THEN 900880    INPUT " WHAT PIECE DO YOU WANT INTERCHANGED FOR THE PAWN?",F$890    M(I)=-(POS(A$,F$[1,1])-1)900  NEXT I910  FOR I=92 TO 99                             ! CHECK FOR COMPUTER PAWN PROMOTION (ALWAYS TAKES QUEEN)920    IF M(I)<>1 THEN 940930    M(I)=5                                   ! COMPUTER QUEENS IT'S PAWN940  NEXT I950 Go: H5=0                                    ! TO INDICATE EVALUATION OF PLAYER'S MOVES960  GOSUB Move_gen                             ! LEGAL MOVE GENERATOR970  IF Moov>1 THEN 1000980  GOSUB Openings                             ! CHECK BOOK OPENINGS990  GOTO Make_move1000 IF H(K1-21)>=0 THEN 10301010 PRINT "I AM IN CHECK";LIN(1)1020 V7=-1.70140E381030 FOR I1=K7+1 TO K6                          ! EXAMINE LEGAL MOVES  THAT COMPUTER CAN MAKE1040   M1=A(I1) DIV 100                         ! SQ # FROM1050   M3=A(I1) MOD 100                         ! SQ # TO1060   V6=01070   H5=1                                     ! INDICATES EVALUATION OF COMPUTER'S MOVE1080   S8=M(M3)                                 ! PIECE #  ON SQ  UNDER CONSIDERATION (SQ # TO)1090   S9=M(M1)                                 ! PIECE #  ON SQ  UNDER CONSIDERATION (SQ # FROM)1100   IF S9=1 THEN 1160                        ! BRANCH IF PIECE BEING MOVED IS A PAWN1110   IF E(M3-21)-(14-V(S9+1))<H(M3-21) THEN 11401120   IF X(M3-21)=0 THEN 11601130   IF V(S9+1)<=V(6-INT(LOG(X(M3-21))/2.30528+.2)+1) THEN 11601140   IF V(S9+1)<=V(ABS(S8)+1) THEN 11601150   GOTO 12701160   M(M3)=S9                                 ! MAKE THE MOVE1170   M(M1)=01180   GOSUB Main1190   IF Y(K1-21)<0 THEN 12401200   GOSUB Move_score1210   Y2=11220   Y3=31230   GOTO 14201240   M(M1)=S91250   M(M3)=S81260   GOTO 15801270   A1=B(S9)                                 ! INDEX TO MOVE FUNCTION TABLE "P"1280   K=P(A1)                                  ! MOVE FUNCTION1290   B8=M3+K                                  ! TRY THE MOVE1300   Branch=SGN(M(B8))+2                      ! WHO IS ON THE SQ #1310   IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO Plr,Empt,Comp1320 Plr:   V6=V6+3*ABS(M(B8))1330 Empt:  IF (S9=2) OR (S9=6) THEN 13601340   B8=B8+K1350   GOTO 13001360 Comp:   A1=A1+11370   IF P(A1)<>0 THEN 1280                    ! TRY NEXT POSSIBLE MOVE1380   V6=V6+10*(V(ABS(S8)+1)-V(S9+1))1390   V6=V6+2*E(M1-21)+E(M3-21)-(14-(S9+1))1400   Y2=41410   Y3=61420   FOR I=Y2 TO Y31430     IF (L(I,3)>V6) AND (L(I,1)<>0) THEN 15401440     IF I=Y3 THEN 15001450     FOR J=Y3 TO I+1 STEP -11460       L(J,1)=L(J-1,1)1470       L(J,2)=L(J-1,2)1480       L(J,3)=L(J-1,3)1490     NEXT J1500     L(I,1)=M11510     L(I,2)=M31520     L(I,3)=V61530     GOTO 15801540   NEXT I1550   S1=L(3,1)1560   V1=L(3,2)1570   V7=L(3,3)1580 NEXT I11590 IF Neg THEN 16201600 GOSUB Cas_test1610 IF Jmp THEN Prt_castle1620 S1=L(1,1)1630 V1=L(1,2)1640 V7=L(1,3)1650 IF (V7=0) AND (L(2,3)=0) THEN 1670         !  CHECKMATE1660 GOTO Make_move1670 PRINT "CONGRATULATIONS ... YOU HAVE CHECKMATED ME!";LIN(1)1680 WAIT 30001690 PRINT "PRESS CONT IF YOU WOULD LIKE A RE-MATCH";LIN(1)1700 BEEP1710 PAUSE 1720 RESTORE 1730 MAT READ M1740 L6=-L61750 GOTO Replay1760 Make_move:                                 !  MAT PRINT L1770 PRINT "THE COMPUTER MOVES MAN:";1780 PRINT "  ";A$[M(S1)+1,M(S1)+1];"(";S1;")";1790 PRINT " TO (";V1;")."1800 MAT L=(0)1810 M(V1)=M(S1)1820 M(S1)=01830 IF (S1=K1) OR (S1=22+7*(L6=1)) THEN Neg=11840 IF K8<>1 THEN Cont_game1850 GOSUB Board1860 PRINT " YOU ARE CHECKMATED "1870 BEEP1880 GOTO 16801890 Prt_castle:                                ! COMPUTER HAS CASTLED1900 PRINT "THE COMPUTER CASTLES";LIN(1)1910 MAT L=(0)1920 Jmp=01930 GOTO Cont_game1940 ! 1950 Knight_moves:                              ! *** TEST KNIGHT MOVES ROUTINE ***1960 IF S9=2 THEN 1980                          ! IS THE PIECE A KNIGHT1970 IF S(M3-21)/1000>.23 THEN 22401980 FOR A1=15 TO 22                            ! TEST THE KNIGHT MOVES1990   K=P(A1)                                  ! SET INDEX TO FIRST OF N MOVES2000   B8=M3+K2010   IF M(B8)=7 THEN 2230                     ! IF GUARD BAND TRY ANOTHER MOVE2020   IF (M(B8)>0) OR (Y(B8-21)<=-11) THEN 2230 ! COMPUTER'S PIECE IS ON SQ2030   FOR A3=15 TO 222040     K4=P(A3)2050     B2=B8+K42060     IF (M(B2)=7) OR (M(B2)>-4) THEN 2220   !DONT GO AFTER THE SMALL STUFF2070     FOR A6=15 TO 222080       IF S9<>2 THEN 21202090       IF M(B8+P(A6))>-4 THEN 22002100       S6=S6+2000+1800*SGN(Y(B8-21))        ! SCORE FOR THE MOVE2110       GOTO 22402120       IF (M(B8+P(A6))<>2) OR (B8+P(A6)=M3) THEN 22002130       IF S(M3-21)=0 THEN 21602140       D4=V(6-INT(LOG(S(M3-21))/2.30528+.2)+1)2150       GOTO 21702160       D4=02170       X9=MIN(D4,V(ABS(M(B2))+1))2180       S6=S6+1500*(X9-3)2190       GOTO 22402200     NEXT A62210     GOTO 22302220   NEXT A32230 NEXT A12240 RETURN 2250 ! 2260 Eval_king_moves:                           ! *** EVALUATE THE KING MOVES ***2270 IF (C7<5) OR (N(K2-21)<=0) OR (K8=1) THEN 29402280 M(M3)=S92290 M(M1)=02300 J6=S62310 I6=02320 M5=M12330 M7=M32340 Y9=S92350 Y8=S82360 H5=02370 GOSUB Move_gen2380 C1=G(ABS(M3-K2))*SGN(M3-K2)2390 FOR I2=1 TO K7                             ! FIND MOVES THE PLAYER'S KING CAN MAKE2400   Q1=A(I2) DIV 100                         ! FROM SQ 2410   Q3=A(I2) MOD 100                         ! TO SQ2420   IF (M(Q1)=-6) AND (N(Q3-21)<=0) THEN 24802430   IF C1=0 THEN 25002440   FOR K=1 TO ABS(M3-K2)/ABS(C1)2450     IF Q3=K2+K*C1 THEN 24802460   NEXT K2470   GOTO 25002480   I6=I6+12490   Z(I6)=A(I2)                              ! TABLE OF MOVES PLAYER'S KING CAN MAKE "Z"2500 NEXT I22510 FOR I3=1 TO I6                             ! EVALUATE THE KING MOVES2520   Q1=Z(I3) DIV 100                         ! FROM SQ # 2530   Q3=Z(I3) MOD 100                         ! TO SQ #2540   S5=M(Q3)2550   S7=M(Q1)2560   M(Q1)=02570   M(Q3)=S72580   H5=02590   GOSUB Move_gen2600   IF E(K2-21)>0 THEN 27802610   FOR I4=K7+1 TO K62620     M1=A(I4) DIV 100                       ! FROM SQ #2630     M3=A(I4) MOD 100                       ! TO SQ #2640     S9=M(M1)2650     S8=M(M3)2660     M(M1)=02670     M(M3)=S92680     IF S9<>2 THEN 27102690     IF (ABS(M3-K2)=8) OR (ABS(M3-K2)=12) THEN 27202700     IF (ABS(M3-K2)=19) OR (ABS(M3-K2)=21) THEN 27202710     IF G(ABS(M3-K2))=0 THEN 27402720     GOSUB Main2730     GOSUB Mate_test2740     M(M1)=S92750     M(M3)=S82760     IF K8=1 THEN 27802770   NEXT I42780   M(Q1)=S72790   M(Q3)=S52800   IF (K8=0) AND (E(K2-21)<=0) THEN 28502810   K8=02820 NEXT I32830 S6=J6+400002840 GOTO 28602850 S6=J62860 H5=02870 M1=M52880 M3=M72890 S9=Y92900 S8=Y82910 M(M1)=S92920 M(M3)=S82930 GOSUB Move_gen2940 RETURN2950 ! 2960 Castle: ! CASTLING TESTS FOR PLAYER ONLY2970 IF E(K2-21)>0 THEN Illegal                 ! CAN'T CASTLE OUT OF CHECK2980 Que=INT(F1/10)                             ! 1= QUEEN SIDE , 0=KING SIDE2990 IF F1=9 THEN Kng=1                         ! 1= KING SIDE , 0=QUEEN SIDE3000 IF F1=11 THEN Kng=03010 Cas=SGN(10-F1)                             ! KING SIDE =1 , QUEEN SIDE =-13020 FOR I=1 TO 2+Que                           ! TEST FOR CASTLING VALIDITY3030   IF M(K2+I*Cas*L6)<>0 THEN Illegal3040   IF I=3 THEN 30603050   IF E(K2+I*Cas*L6-21)>0 THEN Illegal3060   NEXT I3070 M(K2+2*L6*Kng-2*L6*Que)=-6                 ! NEW KING POSITION3080 M(K2+L6,**Kng-L6*Que)=-4                   ! NEW ROOK POSITION3090 M((3+Que)*Cas*L6+K2)=0                     ! DELETE OLD ROOK POSITION3095 M(K2)=03100 GOTO Ok3110 ! 3120 Cas_test:                                  ! TEST FOR COMPUTER TO CASTEL3130 Neg=0                                      ! =1 IF CASTLE TAKES PLACE3140 FOR I=1 TO 23150   Sqf=K1+I*L63160   IF M(Sqf)<>0 THEN Ret3170   IF H(Sqf-21)<0 THEN Ret3180 NEXT I3190 M(K1+2*L6)=6                               ! NEW KING POSITION3200 M(K1+L6)=4                                 ! NEW ROOK POSITION3210 M(K1)=0                                    ! DELETE OLD K POSITION3211 M(3*L6+K1)=0                               ! DELETE OLD R POSITION3220 Neg=1                                      ! CASTLE INDICATOR3221 Jmp=1                                      ! CASTLE INDICATOR3230 Ret: RETURN 3240 !   STARTING BOARD POSITIONS3250 DATA 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,4,2,3,5,6,3,2,43260 DATA 7,7,1,1,1,1,1,1,1,1,7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,03270 DATA 7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,7,73280 DATA -1,-1,-1,-1,-1,-1,-1,-1,7,7,-4,-2,-3,-5,-6,-3,-2,-43290 DATA 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,1,3,3,5,9,123300 DATA 12,15,10,1,6,63310 DATA 1,-1,10,-10,0,1,4,-1,10,-10,-9,-11,9,11,0,8,-8,12,-12,19,-19,21,-21,03320 DATA 1,1,1,1,1,1,1,8,9,10,11,12,0,0,0,0,0,9,19,103330 DATA 21,11,0,0,0,0,9,0,0,10,0,0,11,0,0,9,0,0,0,103340 DATA 0,0,0,11,9,0,0,0,0,10,0,0,0,9,11,0,0,0,0,103350 DATA 0,0,9,0,0,11,0,0,0,10,0,0,0,0,0,0,113360 DATA 0,1,2,3,4,5,6,-1,-2,-3,-4,-5,-6       ! VALUE FOR MANUAL BOARD INPUT3370 DATA 3656,8666,9374,8575,9879,8777         ! BOOK OPENING TABLE3380 DATA 3555,8565,8676,9877,8474,83733390 DATA 3545,8575,9877,9879,93,74,95683400 DATA 2847,9577,9559,9562,0,03410 DATA 2849,9764,0,0,0,03420 DATA 3646,8666,9374,8464,0,03430 DATA 3848,8676,9877,8878,8373,94673440 !  SET UP BOARD FROM MANUAL INPUT OR FILE DATA3450 Moov=53460 INPUT "INPUT THE POSITION FROM KEYBOARD OR DATA FILE (K/F)",H$3470 IF H$[1,1]="K" THEN 35303480 IF H$[1,1]<>"F" THEN 34603490 ! INPUT "ENTER FILE NAME",File$3500 ASSIGN #2 TO "CHSGME"3510 READ #2;M(*),L63520 GOTO 37203530 FOR I=22 TO 99                             ! SET PLAYING AREA OF BOARD TO EMPTY (ALL ZERO)3540   IF I MOD 10<2 THEN 3560                  ! SKIP GUARD AREA3550   M(I)=0                                   !  PLAYING SQUARE = 03560 NEXT I3570 ! MANUAL INPUT OF THE BOARD STARTING POSTIONS USING "KEY" NOTATION3580 ! ENTER BY ROW; ROW 1 IS COMPUTER'S  BACK ROW3590 ! ENTER THE FOLLOWING CODES:  COMPUTER PIECE IS ENTERED IN HIGH CASE3600 ! PLAYERS PIECE IN LOW CASE. A "-" IS A BLANK. i.e. R-BKQ-n3610 FOR I=1 TO 83620   DISP "ENTER ROW";I3630   INPUT F$3640   FOR J=1 TO LEN(F$)3650     P=POS(B$,F$[J,J])3660     IF P=1 THEN 36903670     B=Value(P)3680     M(12+10*I+J-1)=B3690   NEXT J3700   F$=A$[2,1]3710 NEXT I3720 F$="P"3730 GOSUB New_board3740 IF F$[1,1]="P" THEN Cont_game3750 GOTO Ok3760 ! 3770 Mate_test:                                 ! *** TESTS FOR PLAYER CHECHMATE ***3780 IF N(K2-21)<=0 THEN 42603790 A1=6                                       ! SET INDEX TO START OF KING MOVES3800 K=P(A1)                                    ! MOVE FUNCTION ADDER3810 B8=K2+K                                    ! B8 IS SQ UNDER EVALUATION3820 IF M(B8)=7 THEN 3880                       ! TRY NEXT MOVE IF ITS THE GUARD BAND3830 T9=SGN(K2-M3)3840 C1=G(ABS(K2-M3))3850 IF S9<=2 THEN 38703860 IF K=T9*C1 THEN 38803870 IF (N(B8-21)<=0) AND (M(B8)>=0) THEN 42603880 A1=A1+13890 IF P(A1)<>0 THEN 38003900 IF Y(M3-21)>=0 THEN 40203910 IF N(K2-21)<=11 THEN 39603920 S6=S6+600003930 K8=1                                       ! ***  PLAYER IS CHECKMATED ***3940 GOTO 42603950 ! TEST THE PLAYER'S KING MOVES3960 IF (M3<>K2+1) AND (M3<>K2-1) AND (M3<>K2+10) AND (M3<>K2-10) THEN 39803970 GOTO 39903980 IF (M3<>K2+9) AND (M3<>K2-9) AND (M3<>K2+11) AND (M3<>K2-11) THEN 42603990 IF O(K2-21)<>10^(6-S9) THEN 42604000 IF (Y(M3-21)<-2) OR (N(M3-21)<=0) THEN 42604010 GOTO 39204020 IF S9<>2 THEN 40504030 IF O(K2-21)/100000<.1 THEN 42604040 GOTO 39204050 Z1=T9*C14060 B8=M3+Z14070 IF (Y(B8-21)<-2) AND (Y(B8-21)<>-13) THEN 41104080 IF B8=K2-Z1 THEN 41104090 B8=INT(B8+Z1+.2)4100 GOTO 40704110 REM 4120 IF B8<63 THEN 41804130 IF (M(B8+10)=-1) OR (M(B8+10)=0) AND (M(B8+20)=-1) THEN 42004140 GOSUB Comb4150 IF (B8=K2-Z1) AND (X7=1) THEN 39204160 Branch=SGN(X8-X7)+24170 IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 4260,4240,42404180 IF M(B8+10)=-1 THEN 42004190 GOTO 41404200 GOSUB Comb4210 IF (B8=K2-Z1) AND (X7=1) AND (X8>1) THEN 39204220 Branch=SGN(X8-X7)+24230 IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 4260,4260,42404240 S6=S6+250004250 REM 4260 RETURN 4270 ! 4280 Comb:! *** COMBINE ROUTINE ***4290 FOR J=1 TO 24300   X7=04310   IF J=1 THEN X6=O(B8-21)4320   IF J=2 THEN X6=S(B8-21)4330   FOR I=1 TO 64340     X6=X6/104350     X7=X7+(X6-INT(X6))*104360     X6=INT(X6)4370   NEXT I4380   IF J=2 THEN 44104390   X8=X74400 NEXT J4410 RETURN4420 ! 4430 King_moves: ! *** TEST KING MOVES ***4440 MAT W=X4450 C7=04460 A3=64470 Q4=P(A3)4480 B8=K2+Q44490 IF M(B8)<>7 THEN 45204500 C7=C7+14510 GOTO 45304520 C7=C7+((E(B8-21)>0) OR (M(B8)<0))4530 Branch=SGN(M(B8))+24540 IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 4570,4550,46704550 B8=B8+Q44560 GOTO 45304570 B2=B84580 B8=B8+Q44590 IF M(B8)=7 THEN 46704600 Branch=SGN(M(B8))+24610 IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 4670,4580,46204620 IF (M(B8)<>4-INT(A3/10)) AND (M(B8)<>5) THEN 46704630 A5=-14640 I=B24650 A7=M(B2)4660 GOSUB Multi_gen4670 A3=A3+14680 IF P(A3)=0 THEN 47004690 GOTO 44704700 MAT H=H-T4710 MAT X=W4720 A5=14730 Q4=04740 RETURN4750 ! 4760 Mat_score: ! *** CAPTURED MATERIAL SCORE ROUTINE ***4770 IF S8=0 THEN 48404780 IF V(S9+1)<V(ABS(S8)+1) THEN 48304790 B8=M34800 GOSUB Comb4810 IF (X8>=X7) AND (N(M3-21)>=Y(M3-21)) THEN 48304820 GOTO 48404830 S6=S6+2000*V(ABS(S8)+1)4840 RETURN 4850 ! 4860 Move_gen:!  ***  LEGAL MOVE GENERATOR SUBROUTINE  ***4870 FOR I=22 TO 99  !  FIND THE KINGS4880    IF M(I)<>6 THEN 49004890    K1=I4900    IF M(I)<>-6 THEN 49204910    K2=I4920 NEXT I4930 MAT W=(0)4940 MAT T=(0)4950 MAT H=(0)4960 MAT E=(0)4970 IF H5=0 THEN K6=0 ! ONLY WHEN PLAYER'S MOVE BEING EVALUATED4980 FOR F7=-1 TO 1 STEP 24990   FOR I=22 TO 995000     A7=M(I)5010     IF A7=7 THEN 5200   ! BRANCH IF GUARD SQUARE5020     IF F7=1 THEN 50505030     Branch=SGN(A7)+2    ! BRANCH IF NOT COLOR UNDER CONSIDERATION5040     IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 5070,5200,52005050     Branch=SGN(A7)+25060     IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 5200,5200,50705070     IF H5=1 THEN 51905080     IF ABS(M(I))<>1 THEN 5190   ! BRANCH IF PIECE # PAWN5090     T6=SGN(M(I))5100     FOR K=10 TO 20 STEP 10      ! GENERATE SINGLE & DOUBLE PAWN MOVES5110       IF K=10 THEN 51405120       ! BRANCH IF PAWN HAS BEEN MOVED5130       IF (M(I)<0) AND (I<82) OR (M(I)>0) AND (I>39) THEN 51905140       B8=I+K*T6  ! GENERATE NEW POSITION5150       IF M(B8)<>0 THEN 5170   ! OCCUPIED5160       GOSUB Add_move5170       IF (K=10) AND (M(B8)<>0) THEN 51905180     NEXT K5190     GOSUB Multi_gen5200     NEXT I   ! CONSIDER NEXT SQUARE5210   IF F7=1 THEN 5270  ! FIRST COLOR5220   MAT H=T5230   MAT T=(0)5240   MAT X=W5250   MAT W=(0)5260   GOTO 5310  ! NEXT F75270   MAT T=(-1)  ! SECOND COLOR5280   MAT E=T5290   MAT T=(0)5300   MAT D=W5310   NEXT F75320 H5=15330 GOSUB King_moves5340 RETURN 5350 ! 5360 Main: ! *** SUBROUTINE **5370 FOR I=22 TO 99       ! FIND THE KINGS5380   IF M(I)<>6 THEN 54005390   K1=I                 ! COMPUTER'S KING5400   IF M(I)<>-6 THEN 54205410   K2=I                 ! PLAYER'S KING5420 NEXT I5430 MAT N=E5440 MAT Y=H5450 I=M15460 A7=S95470 A5=-15480 MAT W=D5490 GOSUB Multi_gen5500 MAT N=N+T5510 MAT T=(0)5520 A5=15530 I=M35540 GOSUB Multi_gen5550 MAT N=N-T5560 MAT T=(0)5570 MAT O=W5580 MAT W=X5590 IF S8=0 THEN 56805600 M(M1)=S95610 A7=S85620 A5=-15630 GOSUB Multi_gen5640 MAT Y=Y-T5650 MAT T=(0)5660 A5=15670 M(M1)=05680 MAT S=W5690 FOR N5=-1 TO 1 STEP 25700   I=M15710   IF N5=1 THEN I=M35720   A1=65730 MoveLoop:  K=P(A1)     ! MOVE FUNCTION ADDER5740   B8=I+K           ! SQ BEING CONSIDERED5750   IF M(B8)=7 THEN IncIndex    !  GUARD BAND5760   IF M(B8)=0 THEN 6010   !  EMPTY SQ5770   Abs1=ABS(M(B8)) ! # OF PIECE ON SQ UNDER CONSIDERATION5780   Sgn1=SGN(M(B8)) ! -1 =PLAYERS PIECE,0=EMPTY, 1=COMPUTERS PIECE5790   IF A1>9 THEN 58505800   IF (Abs1<>4) AND (Abs1<>5) THEN IncIndex5810   IF (M(M3)*Sgn1=4) OR (M(M3)*Sgn1=5) THEN IncIndex5820   IF (N5<>1) OR (ABS(A1)<>10) THEN 58705830   IF (M(M3)=1) AND (Sgn1=1) THEN IncIndex5840   GOTO 58705850   IF (Abs1<>3) AND (Abs1<>5) THEN IncIndex5860   IF (M(M3)*Sgn1=3) OR (M(M3)*Sgn1=5) THEN IncIndex5870   B2=I-K5880   IF M(B2)=7 THEN IncIndex5890   IF N5=-1 THEN 59105900   IF S8<>0 THEN IncIndex5910   Branch=Sgn1+25920   IF (Branch>=1) AND (Branch<4) THEN ON Branch GOSUB Score2,Score2,Score35930   IF M(B2)<>0 THEN 59505940   GOTO 59905950   IF A1>9 THEN 59805960   IF (M(B2)*SGN(M(M3))<>4) AND (M(B2)*SGN(M(M3))<>5) THEN IncIndex5970   GOTO 59905980   IF (M(B2)*SGN(M(M3))<>3) AND (M(B2)*SGN(M(M3))<>5) THEN IncIndex5990   B2=B2-K6000   GOTO 58806010   B8=B8+K6020   GOTO 57506030 IncIndex:  A1=A1+1 ! INCREMENT INDEX6040   IF P(A1)<>0 THEN MoveLoop6050 NEXT N56060 RETURN 6070 ! 6080 Score: ! ***  MOVE SCORING ROUTINE ***6090 Sqf=B8-216100 W(Sqf)=W(Sqf)+A5*10^(6-ABS(A7))6110 T(Sqf)=T(Sqf)-(14-V(ABS(A7)+1))6120 IF A8=1 THEN 61506130 IF (ABS(A7)=1) AND (M(B8)=0) THEN 61506140 GOSUB Add_move6150 RETURN 6160 ! 6170 Score2:  ! *** MOVE SCORING ROUTINE ***6180 Sqf=B2-216190 MAT W=S6200 IF N5<>1 THEN 62206210 A5=-16220 W(Sqf)=W(Sqf)+A5*10^(6-ABS(M(B8)))6230 T(Sqf)=T(Sqf)-(14-V(ABS(M(B8))+1))6240 MAT T=(N5)6250 MAT Y=Y-T6260 MAT T=(0)6270 MAT S=W6280 A5=16290 RETURN6300 ! 6310 Score3: ! ***  MOVE SCORING ROUTINE ***6320 Sqf=B2-216330 MAT W=O6340 IF N5<>1 THEN 63606350 A5=-16360 W(Sqf)=W(Sqf)+A5*10^(6-ABS(M(B8)))6370 T(Sqf)=T(Sqf)-(14-V(ABS(M(B8))+1))6380 MAT T=(N5)6390 MAT N=N+T6400 MAT T=(0)6410 MAT O=W6420 A5=16430 RETURN 6440 ! 6450 Add_move:! *** ADD TO POSSIBLE MOVE TABLE "A" ***6460 IF H5=1 THEN 6550  ! IF COMPUTER'S MOVE IS UNDER EVAL.6470 IF F7=1 THEN 65006480 IF M(B8)<0 THEN 6550  ! IF SQ HAS PLAYERS PIECE6490 GOTO 65106500 IF M(B8)>0 THEN 6550  ! IF SQ HAS COMPUTERS PIECE6510 K6=K6+1   ! INCREMENT POS. MOVE COUNT6520 A(K6)=100*I+B8  ! ADD MOVE TO TABLE "A"6530 IF F7<>-1 THEN 65506540 K7=K6  ! NEW END OF PLAYER MOVE TABLE6550 RETURN6560 ! 6570 Multi_gen:! * GENERATE MULTIPLE MOVES (B,R & Q  SET A8=1, ELSE A8=0)6580 ! A7= PIECE FOR WHICH MOVES ARE BEING GENERATED6590     A1=B(ABS(A7))  !  INDEX TO MOVE FUNCTION TABLE6600     K=P(A1)        ! MOVE FUNCTION ( ADD VALUE)6610     IF ABS(Q4)=ABS(K) THEN 6800  ! Q4 INIT = 06620     IF ABS(A7)<>1 THEN 6650      ! TEST FOR PAWN6630     B8=I+K*SGN(A7)               ! FOR PAWN RESTRICT TO FOWARD6640     GOTO 66606650     B8=I+K    ! SET U,,P TEST MOVE - B8 IS SQ # UNDER CONSIDERATION6660     IF M(B8)=7 THEN 6790         ! TEST FOR GUARD BAND6670     GOSUB Score  ! SCORE  & ADD THE MOVE TO TABLE "A"6680     ! BRANCH ONLY IF P,N OR K. (THESE MOVE ONLY 1 MOVE) LEAVES B,R & Q6690     IF (ABS(A7)<=2) OR (ABS(A7)=6) THEN 67906700     Branch=SGN(M(B8))+2  ! IS SQ OCCUPIED OR EMPTY6710     IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO Occ,Empty,Occ6720 Occ:    IF A1<10 THEN 6750   !  NOT B OR N MOVE6730     IF (M(B8)*SGN(A7)<>3) AND (M(B8)*SGN(A7)<>5) THEN 67906740     GOTO 67606750     IF (M(B8)*SGN(A7)<>4) AND (M(B8)*SGN(A7)<>5) THEN 67906760     A8=1     ! ONLY IF B,R OR Q MOVE6770 Empty:  B8=B8+K  ! NEW TEST SQ #6780     GOTO 66606790     A8=0     ! IF P,K OR K MOVE6800     A1=A1+1    ! INCREMENT INDEX TO MOVE FUNCTION TABLE6810     IF P(A1)<>0 THEN 6600   ! TEST FOR END OF MOVE FUNCTION TABLE6820     RETURN6830     ! 6840 Move_score:  !  *** SCORES POSSIBLE MOVES ***6850   S6=06860   FOR I3=22 TO 996870     Sqf=I3-21   ! SQ NUMBER FUNCTION - INDEX TO SCORING ARRAYS6880     IF M(I3)=7 THEN 70506890     D7=N(Sqf)+Y(Sqf)6900     IF S(Sqf)<=0 THEN 69306910     D8=V(6-INT(LOG(S(Sqf))/2.30528+.2)+1)6920     GOTO 69406930     D8=06940     E7=V(ABS(M(I3))+1)6950     Branch=SGN(D7*M(I3))+26960     IF (Branch>=1) AND (Branch<4) THEN ON Branch GOTO 6970,7010,69906970     S6=S6+(48*SGN(M(I3))+60)*D7*E76980     GOTO 70206990     S6=S6+D7*(12-E7)7000     GOTO 70207010     S6=S6+2*D77020     IF M(I3)<=0 THEN 70507030     IF (E7<=D8+.1) OR (S(Sqf)=0) THEN 70507040     S6=S6-2000*E77050   NEXT I37060   M(M1)=S97070   M(M3)=S87080   GOSUB Knight_moves7090   GOSUB Mate_test7100   GOSUB Mat_score7110   IF S8=0 THEN 71707120   Sqf=M3-217130   S6=S6+110*(Y(Sqf)+N(Sqf))*S87140   IF S(Sqf)=0 THEN 71707150   IF V(S9+1)=V(6-INT(LOG(S(Sqf))/2.30528+.2)+1) THEN 71707160   S6=S6+2000*ABS(S8)7170   GOSUB Eval_king_moves7180       IF Z4=1 THEN PRINT USING 7190;M1,M3,S6+V6  ! PRINT MOVES AND SCORES7190       IMAGE M2D ,M2D ,7X,M6D7200   V6=V6+S67210   RETURN 7220 ! 7230 New_board:!  DRAW BOARD FOR THE FIRST TIME7231 X=07232 Y=07240 MAT Old=M7250 PEN 17260 PLOTTER IS 13,"GRAPHICS"7270 GCLEAR7280 SCALE -20,180,0,1607290 GRAPHICS7300 CLIP 0,160,0,1607310 GRID 20,20,0,07320 FOR Ip=2 TO 97330   FOR Jp=2 TO 97340     K=10*Ip+Jp7350     CALL Decode(K,X,Y)7360     PLOT X,Y,-27370     RPLOT -4,-5,-27380     LORG 77390     PEN 17400     LABEL USING "DD";K7410   NEXT Jp7420 NEXT Ip7430 ! PLOT PIECES ON BOARD7440 FOR I=22 TO 997450   IF (M(I)=0) OR (M(I)=7) THEN 74807460   Pn=M(I)7470   CALL Plot_man(I,Pn,0)7480 NEXT I7490 RETURN7500 ! 7510 Board:!  ***** PLOTS THE BOARD AFTER A MOVE ***7520 MAT Change=(0)7530 Vi=17540 FOR Mix=22 TO 997550   IF M(Mix)=7 THEN 7590 ! BRANCH IF GUARD BAND7560   IF M(Mix)=Old(Mix) THEN 7590 ! IF NO CHANGE7570   Change(Vi)=Mix  ! BOARD CHANGES ONLY - SQ # OF CHANGE7580   Vi=Vi+17590 NEXT Mix7600 FOR Vo=Vi-1 TO 1 STEP -1  ! MOVE ALL THE CHANGED PIECES7610   Dest=Change(Vo)  ! SQ # THAT HAS CHANGED7620   Pn=M(Dest)       ! PIECE # OF NEW PIECE ON SQ7630   CALL Plot_man(Dest,Pn,1) ! PLOT MAN ON "Dest" SQ7640 NEXT Vo7650 MAT Old=M7660 RETURN7670 ! 7680 Openings: ! BOOK OPENINGS7690 IF L6=1 THEN 77307700 IF Moov=0 THEN Mv=36567710 IF Moov=1 THEN Mv=33437720 GOTO Make_mv7730 ON Moov+1 GOTO One,Two7740 One:! 7750 FOR I=1 TO 27760   FOR J=1 TO 67770     Mv=Book(I,J)7780     IF Mv=0 THEN 78107790     IF R5=Mv THEN Do17800   NEXT J7810 NEXT I7820 Mv=36567830 GOTO Make_mv7840 Do1: Mv=Book(I,1)7850 IF I=2 THEN Typ2=17860 GOTO Make_mv7870 Two: ! 7880 FOR I=3+3*Typ2 TO 5+2*Typ27890   FOR J=1 TO 67900     Mv=Book(I,J)7910     IF Mv=0 THEN 79407920     IF R5=Mv THEN Do27930   NEXT J7940 NEXT I7950 Mv=35457960 GOTO Make_mv7970 Do2: Mv=Book(I,1)7980 Make_mv: V1=Mv MOD 100  ! TO SQ #7990          S1=Mv DIV 100  ! FROM  SQ #8000  Moov=Moov+18010 RETURN8020 ! 8030 Instructions: ! 8040 PRINT "TO ENTER A MOVE, ENTER FROM (SQ.NUMBER) , TO (SQ. NUMBER)";LIN(1)8050 PRINT "TO CASTLE ON:   KINGS SIDE, ENTER 9,0 AS YOUR MOVE."8060 PRINT "               QUEENS SIDE, ENTER 11,0 AS YOUR MOVE.";LIN(2)8070 PRINT "TO MANUALLY ENTER THE PLAYING BOARD, RESPOND WITH 'NO' TO THE"8080 PRINT "THE QUESTION'START NEW GAME'.  AS AN ALTERNATE, A GAME BOARD"8090 PRINT "MAY BE USED THAT WAS PREVIOUSLY STORED ON FILE 'CHSGME'.";LIN(2)8100 PRINT "MANUAL BOARD ENTRY AS FOLLOWS:"8110 PRINT "TO ENTER COMPUTERS PIECES, USE UPPER CASE 'R,B,N,K,Q,P'"8120 PRINT "TO ENTER PLAYERS PIECES, USE LOWER CASE 'r,b,n,k,q,r'"8130 PRINT "EMPTY SQUARES ARE ENTERED USING '-'."8140 PRINT "ROWS ARE ENTERED ONE AT A TIME.  ROW 1 IS THE COMPUTERS BACK ROW."8150 PRINT LIN(1);"TO STORE A GAME FOR FUTURE USE, MOVE '99,99'"8160 PRINT LIN(3)8170 RETURN 8180 END8190 SUB Decode(From,X,Y)8200   Intx=(From/10-INT(From/10)-.2)*9.998210   Inty=7-(From-Intx-2)/10+28220   X=20*Intx+10.28230   Y=20*Inty+2.58240   SUBEND8250 SUB Plot_man(Sqn,Pn,Blink)8260   COM Piece$(*),Erase$,L68270   IF ABS(Pn)>6 THEN SUBEXIT8280   Sx=72+(Sqn MOD 10-2)*568290   Sy=405-(Sqn DIV 10-2)*56.98300   IF Pn=0 THEN Erase8310   Man=((Pn+7)*(Pn<0)+(Pn+6)*(Pn>0))*(L6=1)8320   Man=Man+(ABS(Pn-6)*(Pn<0)+(7-Pn)*(Pn>0))*(L6=-1)8330   C=18340   IF Blink<>1 THEN Skip_beep8350   C=108360   BEEP8370 Skip_beep: !8375   FOR Flash=1 TO C8380    GPLOT Erase$,Sx,24,Sy,40,08390    GPLOT Piece$(Man),Sx,24,Sy,40,18400   NEXT Flash8410   SUBEXIT8420 Erase:  ! 8430   GPLOT Erase$,Sx,24,Sy,40,08440   SUBEND