1000 !   Star Trek -- Version 2.16  -- Local quadrant movements for Enterprise1005 !                                 and photon torpedoes.  Klingons are free1010 !                                 to move within a quadrant.  Black holes1015 !                                 are implemented.  They will appear at1020 !                                 random in the current quadrant and will1025 !                                 suck up all available matter.1030 !   Author:  Martin Nielsen  --  November 19771035 !   This version of Star Trek has been specially enhanced for the 9835A1040 !   The original version appears in the 9845A Games Library1045     RANDOMIZE 1050     OPTION BASE 11055     DEG1060     DIM Q$[5],Destruct$[80],Help$[80],Scan$(10)[100],A$[1],Deadspot$[2]1065                                ! Destruct$ AND Help$ PRINT OUT DOOM MESSAGE1070                                ! Scan$(*) HOLDS THE SCREEN DISPLAY1075                                ! A$ IS USED FOR Y/N RESPONSES1080                                ! Deadspot$ IS CHR$(128)&"."1085     Deadspot$=CHR$(128)&"."1090     Scan$(1)="-------------------------------------------------------------------------------"1091     Scan$(10)="-------------------------------------------------------------------------------"1095     INTEGER G(8,8),Q(8,8),F(8,8)1100                                ! G( , ) IS THE GALAXY1105                                ! Q( , ) IS THE QUADRANT1110                                ! 1115                                ! F( , ) TELL WHICH QUADRANTS HAVE BEEN1120                                !        SCANNED1125     SHORT D(6),K(9,3)          ! D( ) IS DAMAGE CONTROL ARRAY1130                                ! K( , ) TELLS THE POSITIONS AND ENERGIES1135                                !        OF ANY KLINGONS IN THE QUADRANT1140     DIM C$[20]1145     Q$=".EKB*"                 ! Q$ HAS ALL POSSIBLE SYMBOLS IN QUADRANT1150     Blackprob=.9               ! PROBABILITY OF NOT HAVING BLACK HOLE1155     Suckflag=01160     T=T0=INT(RND*20+20)*100    ! STARDATE1165     E=E0=6000                  ! AMOUNT OF ENERGY FOR ENTERPRISE1170     P=P0=20                    ! PHOTON TORPEDOS1175     S9=60                      ! AMOUNT OF ENERGY FOR KLINGONS WILL RANGE1180                                ! FROM 60 TO 6001185     S1=INT(RND*8+1)            ! S1 AND S2 ARE THE COORDINATES OF THE1190     S2=INT(RND*8+1)            !  SECTOR WHERE THE ENTERPRISE IS1195     MAT D=ZER                  ! INITIALIZE MATRICES1200     MAT G=ZER1205     MAT Q=ZER1210     MAT F=ZER1215     MAT K=ZER1220     DIM D$[60]1225     D$="WARP ENGINESS.R. SENSORSL.R. SENSORSPHASER BANKSPHOTON TUBES"1230 ! SET UP GALAXY1235     B9=K9=01240     FOR I=1 TO 81245      FOR J=1 TO 81250       R=RND*641255       K3=(R<.0001)+(R<.01)+(R<.03)+(R<.08)+(R<.28)+(R<1.28)1260       K3=K3+(R<3.28)+(R<6.28)+(R<13.28)  ! K3 IS THE NUMBER OF KLINGONS IN1265                                          !  QUADRANT (I,J)1270       K9=K9+K3                           ! K9 IS THE TOTAL NUMBER OF1275                                          !  KLINGONS IS THE GALAXY1280       B3=(RND>.96)1285       B9=B9+B3                           ! B9 IS THE TOTAL NUMBER OF1290                                          !  STARBASES IN THE GALAXY1295       S3=INT(RND*8+1)1300       G(I,J)=K3*100+B3*10+S31305                        ! THE G ARRAY  CONTAINS THE STATE OF THE GALAXY,1310                        !  WITH EACH ELEMENT BEING THE STATE OF ONE QUADRANT1315      NEXT J1320     NEXT I1325     Q1=INT(RND*8+1)            ! Q1 AND Q2 ARE THE COORDINATES OF THE1330     Q2=INT(RND*8+1)            !  QUADRANT WHERE THE ENTERPRISE IS1335     IF G(Q1,Q2)>=100 THEN 1325 ! FIRST LOCATION WILL NEVER BE HOSTILE1340     K0=K9              ! K0 IS THE ORIGINAL NUMBER OF KLINGONS.1345                        ! K9 IS THE CURRENT NUMBER OF KLINGONS.1350     IF B9>0 THEN 1375  ! B9 IS THE NUMBER OF STARBASES.1355      I=RND*8+.51360      J=RND*8+.51365      G(I,J)=G(I,J)+101370      B9=11375     INPUT "RATE YOUR ABILITY ON A SCALE OF 1 TO 10 (1=BEST)",Ability1380                                ! THE NUMBER ENTERED HERE DETERMINES HOW1385                                !  OFTEN THE ENTERPRISE IS SUBJECT TO ATTACK1390                                !  FROM THE KLINGONS.1395     IF (Ability>10) OR (Ability<1) THEN 13751400     T9=28+2*Ability            ! T9 IS THE TOTAL NUMBER OF YEARS TO PERFORM1405                                !  THE MISSION1410     PRINTER IS 16,WIDTH(100)1415     PRINT PAGE;"SPACE--THE FINAL FRONTIER..."1420     PRINT "THESE ARE THE VOYAGES OF THE STARSHIP ENTERPRISE."1425     PRINT "ITS FIVE YEAR MISSION:"1430     PRINT "TO EXPLORE STRANGE NEW WORLDS--"1435     PRINT "TO SEEK OUT NEW LIFE, NEW CIVILIZATIONS--"1440     PRINT "TO BOLDLY GO WHERE NO MAN HAS GONE BEFORE!!!!"1445     Selct=161450     INPUT "PLEASE ENTER THE PRINTER SELECT CODE (DEFAULT IS 16)",Selct1455     IF Selct<0 THEN 14451460     PRINTER IS Selct1465     A$="N"1470     INPUT "DO YOU NEED A REFRESHER COURSE IN COMMANDING A STARSHIP (Y/N)?",A$1475     IF UPC$(A$)="N" THEN 19151480     IF UPC$(A$)="Y" THEN 15101485     GOTO 14701490 Wate:IF Selct<>16 THEN RETURN 1495      DISP "Please press CONT when you are ready for more instructions"1500      PAUSE 1505      RETURN 1510 Inst:IF Selct=16 THEN PRINT PAGE;1515 F1: PRINT "  Welcome back to the Starfleet Academy.  I understand you are here"1520     PRINT "for a refresher course in commanding a starship.  The first thing"1525     PRINT "we should do is cover the mapping of the galaxy.  There are 64 quadrants"1530     PRINT "in the galaxy, arranged in an 8 x 8 matrix.  Each quadrant consists"1535     PRINT "of 64 sectors, also arranged in an 8 x 8 matrix.  On a short range"1540     PRINT "scan, a map of the quadrant you are presently in will be displayed"1545     PRINT "on the left hand side of your screen.  Your position will be indicated"1550     PRINT "by the symbol E.  Any Klingon(s) will be indicated by the symbol K."1555     PRINT "Starbases will be represented by B.  Stars are *'s.  A scan of the galaxy"1560     PRINT "may be obtained by pressing key 21 (shift key 9).  The right hand side"1565     PRINT "of the screen will be devoted to a long range scan of the galaxy."1570     PRINT "Each '.' represents a quadrant of the galaxy that has not been scanned."1575     PRINT "Those quadrants which have been scanned will have a three-digit number."1580     PRINT "In this number, the ones digit tells how many stars are in that quadrant,"1585     PRINT "the tens digit tells how many starbases are in that quadrant, and"1590     PRINT "the hundreds digit tells how many Klingons are in that quadrant."1595     PRINT "Down the middle of the screen you will notice a column of vital information"1600     PRINT "concerning the state of your ship."1605     PRINT "   Now let's move on to steering the ship.  The course you are on"1610     GOSUB Wate1615 F2: PRINT "will be controlled by pressing special function keys 0, 1, and 2, and"1620     PRINT "the keys obtained by shifting these (12, 13, and 14).  The current course"1625     PRINT "will be displayed at all times in the bottom line of the screen display."1630     PRINT "This course is given in degrees, with 360 being galactic 'north' (straight"1635     PRINT "up on your screen), 90 being galactic 'east' (to the right on your"1640     PRINT "screen), and so on.  The course determines both the direction the ship"1645     PRINT "will take when you give the command to 'warp out', as well as the "1650     PRINT "direction your photon torpedoes will go when they are fired."1655     PRINT "   Now that you understand how to steer the ship, you should learn"1660     PRINT "how to move it.  The warp factor is set by using keys 6, 7, and 8,"1665     PRINT "and the keys obtained by shifting these (18, 19, and 20).  The current"1670     PRINT "warp factor will always be displayed on the bottom line of the screen."1675     PRINT "A warp factor of one will move the ship one quadrant.  If you are moving"1680     PRINT "in a diagonal direction however, you should remember that the warp "1685     PRINT "factor you want to use will be given by finding the length of the"1690     PRINT "hypotenuse of the right triangle formed by the segments of the row"1695     PRINT "and column determining your destination.  Also, to move around inside"1700     PRINT "a quadrant, use fractions of warp factors (a warp factor of .5 will"1705     PRINT "move the ship 4 sectors).  After having determined the correct course"1710     PRINT "and warp factor, the ship may be moved by pressing key 9."1715     GOSUB Wate1720 F3: PRINT "   Next, let's consider your armament.  The most important thing"1725     PRINT "to remember is to be alert at all times, since the Klingons are not"1730     PRINT "going to wait until you decide what to do.  Consequently, you should"1735     PRINT "always have your phasers set to at least "&VAL$(S9)&" units before entering"1740     PRINT "an unexplored quadrant of the galaxy.  The phaser energy is set using"1745     PRINT "using the special function keys 3, 4, and 5, as well as the keys"1750     PRINT "obtained by shifting these keys (15, 16, and 17).  The current phaser,"1755     PRINT "energy will always be displayed in the bottom line of the screen.  To"1760     PRINT "fire the phasers, press key 22.  Remember, the amount of energy used by the"1765     PRINT "phasers when you fire them is taken away from the ship's energy.  Photon"1770     PRINT "torpedoes may be fired by pressing key 10."1775     PRINT "   In case the Klingons damage a part of your ship, you may, if you"1780     PRINT "desire, use some of the ship's energy to repair the damage, or you"1785     PRINT "may wait for your engineer to find a way to fix the damage without"1790     PRINT "using the ship's energy.  To find the extent of the damage, press "1795     PRINT "key 11.  To fix the damage, press key 23 (shift key 11)."1800     PRINT "   Periodically, you may find your supply of energy and/or photon"1805     PRINT "torpedoes running short.  Then it will be necessary to dock at a"1810     PRINT "starbase for refueling.  Docking procedures involve occupying a"1815     PRINT "sector immediately adjacent to the starbase."1820     GOSUB Wate1825 F4: PRINT "   Last, but not least, remember to keep your shields working."1830     PRINT "They are the only things that keep you from being blown to bits"1835     PRINT "when the Klingons fire at you.  Use keys 30 and 31 (control 10"1840     PRINT "and 11) to increment your shield energy and keys 24 and 25"1845     PRINT "(control 4 and 5) to decrement it."1850     PRINT "   If you want to reset the course, phaser energy, warp factor,"1855     PRINT "or shields, use keys 26, 27, 28 and 29 (control keys 6, 7, 8,"1860     PRINT "and 9), respectively."1865     PRINT "   Well, we've done everything we can for you.  From now on, you're"1870     PRINT "on your own.  Remember, your mission is to destroy all the Klingons"1875     PRINT "in the galaxy within "&VAL$(T9)&" stardates.  Our computers show that we are"1880     PRINT "dealing with a small scouting force which is preparing the way for"1885     PRINT "a full-scale invasion.  If we can defeat the scouting force before"1890     PRINT "the main fleet arrives, we will be able to concentrate our forces and"1895     PRINT "stem the attack.  Otherwise, we will surely be overrun."1900     PRINT "   You are being assigned the best ship in the fleet--the Enterprise."1905     PRINT "Good luck!  You'll need it...",LIN(3),""1910     GOSUB Wate1915     PRINT LIN(2);"THE KEYS HAVE THE FOLLOWING MEANINGS:"1920     PRINT "K0  -- CHANGE COURSE OF 90 DEGREES IN A CLOCKWISE DIRECTION"1925     PRINT "K16 -- CHANGE COURSE OF 90 DEGREES IN A COUNTER-CLOCKWISE DIRECTION"1930     PRINT "K1  -- CHANGE COURSE OF 10 DEGREES IN A CLOCKWISE DIRECTION"1935     PRINT "K17 -- CHANGE COURSE OF 10 DEGREES IN A COUNTER-CLOCKWISE DIRECTION"1940     PRINT "K2  -- CHANGE COURSE OF 1 DEGREE IN A CLOCKWISE DIRECTION"1945     PRINT "K18 -- CHANGE COURSE OF 1 DEGREE IN A COUNTER-CLOCKWISE DIRECTION"1950     PRINT "K3  -- INCREMENT PHASER ENERGY BY 500 UNITS"1955     PRINT "K19 -- DECREMENT PHASER ENERGY BY 500 UNITS"1960     PRINT "K4  -- INCREMENT PHASER ENERGY BY 100 UNITS"1965     PRINT "K20 -- DECREMENT PHASER ENERGY BY 100 UNITS"1970     PRINT "K5  -- INCREMENT PHASER ENERGY BY 20 UNITS"1975     PRINT "K21 -- DECREMENT PHASER ENERGY BY 20 UNITS"1980     PRINT "K29 -- LONG RANGE SCAN OF THE GALAXY"1985     PRINT "K8  -- INCREMENT WARP FACTOR BY 5"1990     PRINT "K24 -- DECREMENT WARP FACTOR BY 5"1995     PRINT "K9  -- INCREMENT WARP FACTOR BY 1"2000     PRINT "K25 -- DECREMENT WARP FACTOR BY 1"2005     PRINT "K10 -- INCREMENT WARP FACTOR BY .1"2010     PRINT "K26 -- DECREMENT WARP FACTOR BY .1"2015     GOSUB Wate2020     PRINT "K11 -- WARP OUT (MOVE THE SHIP ON PRESENT COURSE AT GIVEN WARP FACTOR)"2025     PRINT "K12 -- FIRE PHOTON TORPEDO IN PRESENT COURSE HEADING"2030     PRINT "K13 -- FIRE PHASERS"2035     PRINT "K27 -- DAMAGE REPORT"2040     PRINT "K28 -- FIX DAMAGES"2045     PRINT "K15 -- RESET COURSE"2050     PRINT "K30 -- RESET PHASERS"2055     PRINT "K14 -- RESET WARP FACTOR"2060     PRINT "K31 -- RESET SHIELDS"2065     PRINT "K22 -- DECREMENT SHIELDS BY 500 UNITS"2070     PRINT "K23 -- DECREMENT SHIELDS BY 100 UNITS"2075     PRINT "K6  -- INCREMENT SHIELDS BY 500 UNITS"2080     PRINT "K7  -- INCREMENT SHIELDS BY 100 UNITS"2085     DISP "PRESS CONTINUE WHEN YOU ARE READY TO PROCEED"2090     PAUSE 2095     PRINTER IS 16,WIDTH(100)2100      DISABLE ! DISABLE THE KEYS2105      ON KEY #0 GOSUB Changecourse902110      ON KEY #16 GOSUB Changecoursem902115      ON KEY #1 GOSUB Changecourse102120      ON KEY #17 GOSUB Changecoursem102125      ON KEY #2 GOSUB Changecourse12130      ON KEY #18 GOSUB Changecoursem12135      ON KEY #11 GOSUB Warp2140      ON KEY #12 GOSUB Photon2145      ON KEY #13 GOSUB Phaser2150      ON KEY #29 GOSUB Scanlong2155      ON KEY #27 GOSUB Damage2160      ON KEY #28 GOSUB Fix2165      ON KEY #8 GOSUB Warpfactor52170      ON KEY #9 GOSUB Warpfactor12175      ON KEY #10 GOSUB Warpfactorp12180      ON KEY #24 GOSUB Warpfactorm52185      ON KEY #25 GOSUB Warpfactorm12190      ON KEY #26 GOSUB Warpfactormp12195      ON KEY #3 GOSUB Phaserenergy5002200      ON KEY #4 GOSUB Phaserenergy1002205      ON KEY #5 GOSUB Phaserenergy202210      ON KEY #19 GOSUB Phaserenergym502215      ON KEY #20 GOSUB Phaserenergym102220      ON KEY #21 GOSUB Phaserenergym202225      ON KEY #15 GOSUB Clearcourse2230      ON KEY #30 GOSUB Clearphaser2235      ON KEY #14 GOSUB Clearwarp2240      ON KEY #31 GOSUB Clearshields2245      ON KEY #22 GOSUB Decshields5002250      ON KEY #23 GOSUB Decshields1002255      ON KEY #6 GOSUB Incshields5002260      ON KEY #7 GOSUB Incshields1002265     GOSUB Setup                ! SET UP THE INITIAL CONDITIONS2270     GOSUB Scanlong             ! GIVE LONG RANGE SCAN2275     C1=3602280     Phasers=W1=Shields=02285     ENABLE2290 Loop: FOR Count0=1 TO 5        ! AFTER Count0 LOOP, INCREMENT STARDATE2295      FOR Count3=1 TO Ability    ! AFTER Count3 LOOP, KLINGONS ATTACK2300       FOR Count2=1 TO 92305        STANDARD2310        DISP "COURSE=";C1,"PHASER ENERGY=";Phasers,"WARP FACTOR=";W1,"SHIELDS=";Shields2315        IF K9<=0 THEN Victory2320        IF (E<=0) OR (T>T0+T9) OR (Shields<0) THEN Defeat2325        IF (Q1<1) OR (Q1>8) OR (Q2<1) OR (Q2>8) THEN Lost2330        IF Suckflag THEN Suckedup2335        IF NOT K(Count2,3) OR NOT K3 THEN 23552340        DISABLE2345        CALL Kmove(Count2,Blackhole,Blackx,Blacky,Q(*),K(*),K3,Deadspot$,D(*))2350        ENABLE2355       NEXT Count22360      NEXT Count32365      DISABLE2370      IF NOT K3 OR (C$="DOCKED") THEN 23802375      GOSUB Attacked2380      IF Blackhole THEN GOSUB Suck2385      ENABLE2390 Eloop: NEXT Count0                ! WAIT FOR KEY TO BE PRESSED2395     DISABLE2400     T=T+1                      ! INCREMENT STARDATE2405     CALL Screen(2,22)	!302410     PRINT USING "#,DDDD";T2415     CALL Screen(12,1)2420     ENABLE2421  WAIT 5002425     GOTO Loop                  ! LOOP BACK2430 Clearshields: E=E+Shields2435     Shields=02440     CALL Energyupdate(E)2445     CALL Screen(12,1)2450     RETURN 2455 Clearcourse:  C1=3602460     RETURN 2465 Clearphaser:  Phasers=02470     RETURN 2475 Clearwarp:    W1=02480     RETURN2485 Incshields500: IF E<500 THEN RETURN 2490     Inc=5002495     GOTO 25502500 Incshields100: IF E<100 THEN RETURN 2505     Inc=1002510     GOTO 25502515 Decshields500: IF Shields<500 THEN 25452520     Inc=-5002525     GOTO 25502530 Decshields100: IF Shields<100 THEN 25452535     Inc=-1002540     GOTO 25502545     Inc=-Shields2550     Shields=Shields+Inc2555     E=E-Inc2560     CALL Energyupdate(E)2565     CALL Screen(12,1)2570     RETURN 2575 Phaserenergy500:    Inc=5002580     GOTO 26302585 Phaserenergy100:Inc=1002590     GOTO 26302595 Phaserenergy20: Inc=202600     GOTO 26302605 Phaserenergym50: Inc=-5002610     GOTO 26302615 Phaserenergym10: Inc=-1002620     GOTO 26302625 Phaserenergym20: Inc=-202630     Phasers=Phasers+Inc2635     IF Phasers<0 THEN Phasers=02640     RETURN 2645 Changecourse1:Inc=12650     GOTO 27002655 Changecoursem1:Inc=-12660     GOTO 27002665 Changecoursem10:Inc=-102670     GOTO 27002675 Changecourse10:Inc=102680     GOTO 27002685 Changecourse90:Inc=902690     GOTO 27002695 Changecoursem90:Inc=-902700     C1=C1+Inc2705     IF C1>360 THEN C1=C1-3602710     IF C1<=0 THEN C1=C1+3602715     RETURN 2720 Warpfactor5:Inc=52725      GOTO 27752730 Warpfactor1:Inc=12735      GOTO 27752740 Warpfactorp1:Inc=.12745      GOTO 27752750 Warpfactorm5: Inc=-52755      GOTO 27752760 Warpfactorm1: Inc=-12765      GOTO 27752770 Warpfactormp1: Inc=-.12775      W1=W1+Inc2780      IF W1<0 THEN W1=W1+122785      IF W1>12 THEN W1=W1-122790 RETURN 2795     IMAGE "--------------------------------------------------------"2800     IMAGE "--------------------"2805 Suck:  ! THIS SUBROUTINE SUCKS EVERYTHING INTO THE BLACK HOLE2810 ! Suck WORKS BY DRAGGING IN EVERYTHING IN EVER-WIDENING SQUARES, STARTING2815 ! AT THE BLACK HOLE AND WORKING OUT.2820     FOR Square=1 TO 72825        FOR Ii=Blackx-Square TO Blackx+Square2830           Stp=(Ii=Blackx-Square) OR (Ii=Blackx+Square)2835           Stp=Stp+(NOT Stp*(2*Square))2840           FOR Jj=Blacky-Square TO Blacky+Square STEP Stp2845              IF (Jj<1) OR (Jj>8) OR (Ii<1) OR (Ii>8) THEN 28602850              GOSUB Adjust2855              IF Suckflag THEN RETURN 2860           NEXT Jj2865        NEXT Ii2870     NEXT Square2875     RETURN 2880 Adjust:         IF Q(Ii,Jj)=0 THEN RETURN  ! CHECK FOR EMPTY SPOT2885                 Sx=SGN(Blackx-Ii)          ! COMPUTE X AND Y MOVEMENT2890                 Sy=SGN(Blacky-Jj)2895                 CALL Screen(Ii+1,Jj*2-1)   ! ERASE OLD MARKER2900                 PRINT USING "#,K";CHR$(128)&"."2905                 ! CHECK FOR CRUSHING SOMETHING THAT'S ALREADY THERE2910                 ON Q(Ii+Sx,Jj+Sy)+1 GOTO 3000,3125,2915,2960,29802915                 FOR Kling=1 TO 9       ! CRUSH A KLINGON2920                 IF (K(Kling,1)=Ii+Sx) AND (K(Kling,2)=Jj+Sy) THEN 29302925                 NEXT Kling2930                 K(Kling,3)=02935                 K3=K3-12940                 K9=K9-12945                 G(Q1,Q2)=G(Q1,Q2)-1002950                 CALL Klingonupdate(K9)2955                 GOTO 29952960                 B3=B3-1                ! CRUSH A STARBASE2965                 B9=B9-12970                 G(Q1,Q2)=G(Q1,Q2)-102975                 GOTO 29952980                 S3=S3-1                ! CRUSH A STAR2985                 S9=S9-12990                 G(Q1,Q2)=G(Q1,Q2)-12995                 CALL Quadupdate(G(*),Q1,Q2)3000                 CALL Screen(Ii+Sx+1,(Jj+Sy)*2-1) ! READY FOR NEW MARKER3005                 ON Q(Ii,Jj) GOTO 3010,3030,3085,30953010                 PRINT USING "#,K";"E"  ! BUMP THE ENTERPRISE3015                 S1=Ii+Sx3020                 S2=Jj+Sy3025                 GOTO 31003030                 PRINT USING "#,K";"K"  ! BUMP A KLINGON3035                 GOSUB Whichklingon3040                 GOTO 30703045 Whichklingon:   FOR Kling=1 TO 9       ! FIND WHICH KLINGON WAS BUMPED3050                 IF (K(Kling,1)=Ii) AND (K(Kling,2)=Jj) THEN RETURN 3055                 NEXT Kling3060                 BEEP3065                 END3070                 K(Kling,1)=K(Kling,1)+Sx ! UPDATE KLINGON'S COORDINATES3075                 K(Kling,2)=K(Kling,2)+Sy3080                 GOTO 31003085                 PRINT USING "#,K";CHR$(128)&"B"3090                 GOTO 31003095                 PRINT USING "#,K";CHR$(128)&"*"3100                 IF (Ii+Sx=Blackx) AND (Jj+Sy=Blacky) THEN 31203105                 Q(Ii+Sx,Jj+Sy)=Q(Ii,Jj)  ! UPDATE NEW SECTOR3110                 Q(Ii,Jj)=0               ! ZERO OUT THE OLD ONE3115                 RETURN 3120 Eat:            ON Q(Ii,Jj) GOTO 3125,3165,3215,32553125                 Suckflag=1   ! ENTERPISE IS EATEN3130                 CALL Screen(Blackx+1,Blacky*2-1)3135                 PRINT USING "#,K";CHR$(128)&" "3140                 DISP "AAAAAAAAAAARRRRRRRRRRRRGGGGGGGGGGGHHHHHHHHHHH!!!!!!!"3145                 FOR Beap=1 TO 10003150                 BEEP3155                 NEXT Beap3160                 RETURN 3165                 K3=K3-1      ! KLINGON IS EATEN3170                 K9=K9-13175                 CALL Klingonupdate(K9)3180                 K(Kling,3)=K(Kling,2)=K(Kling,1)=03185                 G(Q1,Q2)=G(Q1,Q2)-1003190                 BEEP3195                 DISP "KLINGON DESTROYED BY BLACK HOLE"3200                 WAIT 3003205                 DISP ""3210                 GOTO 32903215                 B3=B3-1      ! BASE IS EATEN3220                 B9=B9-13225                 G(Q1,Q2)=G(Q1,Q2)-103230                 BEEP3235                 DISP "STARBASE DESTROYED BY BLACK HOLE"3240                 WAIT 3003245                 DISP ""3250                 GOTO 32903255                 S3=S3-1      ! STAR IS EATEN3260                 S9=S9-13265                 G(Q1,Q2)=G(Q1,Q2)-13270                 BEEP3275                 DISP "STAR DESTROYED BY BLACK HOLE"3280                 WAIT 3003285                 DISP ""3290                 Q(Ii,Jj)=03295                 CALL Screen(Blackx+1,Blacky*2-1)3300                 PRINT USING "#,K";CHR$(128)&" "3305                 CALL Quadupdate(G(*),Q1,Q2)3310                 RETURN 3315 Setup: K3=B3=S3=Blackhole=03320      X=G(Q1,Q2)/1003325      K3=INT(X)                ! NUMBER OF KLINGONS3330      B3=INT((X-K3)*10)        ! NUMBER OF STARBASES3335      S3=G(Q1,Q2)-INT(G(Q1,Q2)*.1)*10 ! NUMBER OF STARS3340      IF RND>Blackprob THEN Blackhole=13345      MAT K=ZER                ! K HOLDS KLINGONS'S COORDINATES AND ENERGIES3350      MAT Q=ZER                ! Q(I,J)=0 -> POSITION (I,J) IS EMPTY3355      Q(S1,S2)=1               ! Q(S1,S2)=1 -> HERE IS THE ENTERPRISE3360      FOR I=1 TO K3            ! SET UP KLINGONS' COORDINATES3365         CALL Rancoor(R1,R2)3370         IF Q(R1,R2)<>0 THEN 33653375         Q(R1,R2)=2            ! Q(R1,R2)=2 -> HERE IS A KLINGON3380         K(I,1)=R13385         K(I,2)=R23390         K(I,3)=S9*INT(10*RND+1) ! K(I,3) IS THE ENERGY OF THE KLINGON3395      NEXT I3400      FOR I=1 TO B3            ! SET UP STARBASE COORDINATES3405         CALL Rancoor(R1,R2)3410         IF Q(R1,R2)<>0 THEN 34053415         Q(R1,R2)=33420         CALL Rancoor(R1,R2)3425         ! CORRUPT LINE3430         ! CORRUPT LINE3435         IF Q(R1,R2)<>0 THEN 34303440         Q(R1,R2)=4            ! Q(R1,R2)=4 -> HERE IS A STAR3445      NEXT I3450      IF NOT Blackhole THEN RETURN 3455      CALL Rancoor(Blackx,Blacky)3460      IF Q(Blackx,Blacky)<>0 THEN 3455 ! CHECK FOR OCCUPANCY3465      RETURN 3470 Scanshort: !  This section does a short range scan3475     E=E-20 !  Decrement energy for scan3480     GOSUB Dockcheck3485     IF Dockflag THEN 36003490     GOTO 35653495 Dockcheck:  Dockflag=03500    FOR I=S1-1 TO S1+1 ! CHECK TO SEE IF THE ENTERPRISE IS DOCKED3505      FOR J=S2-1 TO S2+13510       IF (I<1) OR (J<1) OR (I>8) OR (J>8) THEN 35503515       IF Q(I,J)<>3 THEN 35503520       C$="DOCKED"3525       E=E03530       P=P03535       Shields=03540       Dockflag=13545       RETURN 3550      NEXT J3555     NEXT I3560     RETURN 3565     IF K3>0 THEN 35853570     IF E<E0*.2 THEN 35953575     C$=" GREEN"3580     GOTO 36003585     C$="   RED"3590     GOTO 36003595     C$="YELLOW"3600     IF E<=0 THEN RETURN 3605     IF D(2)>=0 THEN 36203610     CALL Screen(11,1)3615     PRINT "*** SHORT RANGE SENSORS ARE OUT ***"3620     FOR I=2 TO 93625     Scan$(I)=""3630     NEXT I3635     FOR I=1 TO 8               ! COMPUTE 8 ROWS OF SCAN3640      IF D(2)>=0 THEN 36553645      Scan$(I+1)="^^^^^^^^^^^^^^^ "3650     GOTO 37203655      FOR J=1 TO 8              ! FIGURE EACH COLUMN OF ROW #I3660       IF Q$[Q(I,J)+1,Q(I,J)+1]<>"K" THEN 36753665       Scan$(I+1)[LEN(Scan$(I+1))+1]="K "3670       GOTO 37153675       IF Q$[Q(I,J)+1,Q(I,J)+1]<>"E" THEN 36903680       Scan$(I+1)[LEN(Scan$(I+1))+1]="E "3685       GOTO 37153690       IF NOT Blackhole THEN 37103695       IF (I<>Blackx) OR (J<>Blacky) THEN 37103700       Scan$(I+1)[LEN(Scan$(I+1))+1]="  "3705       GOTO 37153710       Scan$(I+1)[LEN(Scan$(I+1))+1]=Q$[Q(I,J)+1,Q(I,J)+1]&" "3715      NEXT J3720      ON I GOTO 3725,3735,3745,3755,3765,3775,3810,38353725      Scan$(I+1)[LEN(Scan$(I+1))+1]="STARDATE     "&VAL$(T)3730      GOTO 38553735      Scan$(I+1)[LEN(Scan$(I+1))+1]="DEADLINE     "&VAL$(T0+T9)3740      GOTO 38553745      Scan$(I+1)[LEN(Scan$(I+1))+1]="CONDITION  "&C$3750      GOTO 38553755      Scan$(I+1)[LEN(Scan$(I+1))+1]="QUADRANT     "&VAL$(Q1)&"- "&VAL$(Q2)3760      GOTO 38553765      Scan$(I+1)[LEN(Scan$(I+1))+1]="SECTOR       "&VAL$(S1)&"- "&VAL$(S2)3770      GOTO 38553775      Scan$(I+1)[LEN(Scan$(I+1))+1]="ENERGY       "3780      Fill$=""3785      IF E>=10 THEN Fill$="  "3790      IF E>=100 THEN Fill$=" "3795      IF E>=1000 THEN Fill$=""3800      Scan$(I+1)[LEN(Scan$(I+1))+1]=Fill$&VAL$(INT(E))3805      GOTO 38553810      Scan$(I+1)[LEN(Scan$(I+1))+1]="PHOTON TORPS   "3815      Fill$=" "3820      IF P>=10 THEN Fill$=""3825      Scan$(I+1)[LEN(Scan$(I+1))+1]=Fill$&VAL$(P)3830      GOTO 38553835      Scan$(I+1)[LEN(Scan$(I+1))+1]="KLINGONS LEFT  "3840      Fill$=" "3845      IF K9>=10 THEN Fill$=""3850      Scan$(I+1)[LEN(Scan$(I+1))+1]=Fill$&VAL$(K9)3855      Scan$(I+1)[LEN(Scan$(I+1))+1]=" "3860      FOR J=1 TO 83865       IF F(I,J)=0 THEN 39103870       Fill$="  "3875       IF G(I,J)>=10 THEN Fill$=" "3880       IF G(I,J)>=100 THEN Fill$=""3885       IF (I=Q1) AND (J=Q2) THEN 39003890       Scan$(I+1)[LEN(Scan$(I+1))+1]=" "&Fill$&VAL$(G(I,J))&" "3895       GOTO 39153900       Scan$(I+1)[LEN(Scan$(I+1))+1]="("&Fill$&VAL$(G(I,J))&")"3905       GOTO 39153910       Scan$(I+1)[LEN(Scan$(I+1))+1]="  .  "3915      NEXT J3920     NEXT I3925     PRINT PAGE;CHR$(128);3930     FOR I=1 TO 103935        PRINT Scan$(I)3940     NEXT I3945     IF C$="DOCKED" THEN PRINT "STARBASE SHIELDS PROTECT THE ENTERPRISE"3950     IF Blackhole THEN PRINT "BLACK HOLE AT SECTOR "&VAL$(Blackx)&"-"&VAL$(Blacky)&"!!!!"3955     CALL Screen(12,1)3960     RETURN 3965 Warp: IF W1=0 THEN RETURN      ! THIS SECTION MOVES THE STARSHIP AT THE3970                                !  CURRENT WARP FACTOR ON THE CURRENT COURSE3975     IF W1<=.2 THEN 40053980     IF D(1)>=0 THEN 40053985     BEEP3990     DISP "*** SCOTT HERE, CAPTAIN--WARP ENGINES ARE DAMAGED, MAXIMUM SPEED IS WARP .2 ***"3995     WAIT 20004000     RETURN 4005     S=14010     FOR I=1 TO 5              ! REPAIR ANY DAMAGED UNITS4015      IF D(I)>=0 THEN 40504020      D(I)=D(I)+14025      IF D(I)<0 THEN 40454030      D(I)=04035      GOSUB Scotty              ! DISPLAY "FIXED" MESSAGE4040      GOTO 40504045      GOSUB Scotty1             ! DISPLAY "STILL WORKING" MESSAGE4050      S=S+124055     NEXT I4060     S=04065     IF RND>.25 THEN 4180        ! 75% CHANCE OF DAMAGE STATUS UNCHANGED4070     R1=INT(RND*5+1)4075     IF RND>.5 THEN Truce        ! 50-50 CHANCE OF GETTING BETTER OR WORSE4080 Zap:D(R1)=D(R1)-(RND*5+1)4085     S=(R1-1)*12+14090     BEEP4095     DISP "*** SPOCK HERE, CAPTAIN--THE ";D$[S,S+11];" HAVE BEEN DAMAGED BY A STORM! ***"4100     WAIT 20004105     S=04110     GOTO 41804115 Truce: FOR I=1 TO 54120        IF D(I)<0 THEN 41354125     NEXT I4130     GOTO 41754135     R1=I4140     D(I)=D(I)+RND*5+14145     IF D(I)>0 THEN D(I)=04150     S=(R1-1)*12+14155     IF D(I)<0 THEN 41704160     GOSUB Scotty               ! DISPLAY "FIXED" MESSAGE4165     GOTO 41754170     GOSUB Scotty1              ! DISPLAY "STILL WORKING" MESSAGE4175     S=04180     N=INT(W1*8)4185     E=E-INT(20*W1^2)          ! DECREMENT ENERGY4190     ! T=T+1                   ! INCREMENT STARDATE4195     Q(S1,S2)=0                ! VACATE THE ENTERPRISE'S OLD POSITION4200     X=S1                      ! SAVE OLD COORDINATES4205     Y=S24210     GOSUB Steer               ! Steer FINDS X1 AND Y1 BASED ON C14215     FOR I=1 TO N              ! CHECK FOR RUNNING INTO SOMETHING4220        S1=S1+X14225        S2=S2+X24230        IF (S1<.5) OR (S2<.5) OR (S1>=8.5) OR (S2>=8.5) THEN 43704235                               ! THE ABOVE STATEMENT TESTS FOR GETTING TO4240                               ! THE EDGE OF THE QUADRANT4245        IF Q(S1,S2)=0 THEN 4285 ! TEST FOR BLOCK4250        FIXED 04255        DISP "ENTERPRISE BLOCKED BY OBJECT AT SECTOR";S1;"-";S24260        BEEP4265        WAIT 7004270        S1=S1-X14275        S2=S2-X24280        GOTO 43204285        CALL Screen(INT(X+.5)+1,INT(Y+.5)*2-1)4290        PRINT USING "#,K";CHR$(128)&"."4295        CALL Screen(INT(S1+.5)+1,INT(S2+.5)*2-1)4300        PRINT USING "#,K";"E"4305        X=S14310        Y=S24315     NEXT I4320     S1=INT(S1+.5)             ! ROUND4325     S2=INT(S2+.5)4330     Q(S1,S2)=14335     GOSUB Dockcheck4340     IF C$<>"DOCKED" THEN 43654345     CALL Screen(4,28)4350     PRINT USING "#,K";C$4355     CALL Energyupdate(E)4360     CALL Decphoton(P)4365     RETURN 4370     PRINT PAGE4375     DISP ""4380     Q1=Q1+INT(MAX(1,W1)*X1+.5)    ! X QUADRANT COORDINATE4385     IF (Q1<1) OR (Q1>8) THEN RETURN ! OUT OF GALAXY4390     Q2=Q2+INT(MAX(1,W1)*X2+.5)    ! Y QUADRANT COORDINATE4395     IF (Q2<1) OR (Q2>8) THEN RETURN ! OUT OF GALAXY4400     S1=INT(RND*8+1)           ! SELECT COORDINATES FOR ENTERPRISE4405     S2=INT(RND*8+1)4410     GOSUB Setup4415     GOSUB Scanlong4420     RETURN 4425 Scotty: BEEP4430     DISP "*** SCOTT HERE, CAPTAIN--WE'VE FIXED THE ";D$[S,S+11]&"! ***"4435     WAIT 20004440     RETURN 4445 Scotty1: BEEP4450     DISP "*** SCOTT HERE, CAPTAIN--WE'RE STILL WORKING ON THE ";D$[S,S+11]&"! ***"4455     WAIT 20004460     RETURN 4465 Scanlong:     IF D(3)>=0 THEN 4495       ! THIS SECTION DOES A LONG RANGE4470                                          !  SCAN OF THE GALAXY4475     BEEP4480     DISP "SPOCK HERE, CAPTAIN -- OUR LONG RANGE SENSORS ARE INOPERABLE"4485     WAIT 15004490     GOTO Scanshort4495     E=E-0    ! Long range scans are free4500     FOR I=Q1-1 TO Q1+14505        FOR J=Q2-1 TO Q2+14510           IF (I<1) OR (I>8) OR (J<1) OR (J>8) THEN 45204515           F(I,J)=14520        NEXT J4525     NEXT I4530     GOTO Scanshort4535 Phaser:     IF D(4)>=0 THEN 4565         ! FIRE PHASERS4540     DISABLE4545     BEEP4550     DISP "SCOTTY HERE, CAPTAIN -- OUR PHASER CONTROLS ARE DISABLED"4555     WAIT 15004560     RETURN 4565     IF Phasers<=0 THEN RETURN 4570     IF E-Phasers>0 THEN 45754575     E=E-Phasers4580     CALL Energyupdate(E)4585     IF K3=0 THEN RETURN 4590     CALL Clearscreen4595     Phasers1=Phasers/K3        ! DIVIDE UP THE PHASER ENERGY AMONG THE4600                                !  KLINGONS IN THE QUADRANT4605     Pos=124610     CALL Clearscreen4615     FOR I=1 TO 94620        IF K(I,3)<=0 THEN 46904625        H=INT(Phasers1*3/FND(I,K(*),S1,S2))4630        IF H>Phasers1 THEN H=Phasers14635        K(I,3)=K(I,3)-H4640        IF K(I,3)<0 THEN K(I,3)=04645        PRINT H;"UNIT HIT ON KLINGON AT SECTOR";K(I,1);"-";K(I,2)4650        PRINT "(";K(I,3);"LEFT)"4655        Pos=Pos+24660        IF Pos<18 THEN 46754665        CALL Clearscreen4670        Pos=124675        IF K(I,3)>0 THEN 46904680        GOSUB Deadklingon4685        IF K9<=0 THEN RETURN 4690     NEXT I4695     CALL Condition(K3,E,E0,C$)4700     CALL Screen(12,1)4705     ENABLE4710     RETURN 4715 Photon:     IF D(5)>=0 THEN 4745         ! FIRE PHOTON TORPEDO ON PRESENT4720                                          !  COURSE4725     BEEP4730     DISP "SPOCK HERE, CAPTAIN -- THE PHOTON TUBES ARE NOT OPERATIONAL"4735     WAIT 15004740     RETURN 4745     IF P>0 THEN 47654750     DISP "SCOTTY HERE, CAPTAIN -- ALL OUR PHOTON TORPEDOES ARE USED UP"4755     WAIT 15004760     RETURN 4765     GOSUB Steer4770     X=S14775     Y=S24780     P=P-14785     X=X+X14790     Y=Y+X24795     IF (X<.5) OR (Y<.5) OR (X>=8.5) OR (Y>=8.5) THEN 49654800     ON 1+Q(X,Y) GOTO 4805,4805,4830,4910,48854805     CALL Screen(INT(X+.5)+1,INT(Y+.5)*2-1)4810     PRINT USING "#,K";"."4815     CALL Screen(INT(X+.5)+1,INT(Y+.5)*2-1)4820     PRINT USING "#,K";CHR$(128)&"."4825     GOTO 47854830     BEEP4835     DISP "*** KLINGON DESTROYED ***"4840     WAIT 3004845     K3=K3-14850     K9=K9-14855     IF K9<=0 THEN RETURN 4860     FOR I=1 TO 94865        IF (INT(X+.5)=K(I,1)) AND (INT(Y+.5)=K(I,2)) THEN 48754870     NEXT I4875     K(I,1)=K(I,2)=K(I,3)=04880     GOTO 49304885     BEEP4890     DISP "STAR DESTROYED"4895     WAIT 3004900     S3=S3-14905     GOTO 49304910     BEEP4915     DISP "*** STAR BASE DESTROYED ... CONGRATULATIONS, TURKEY ***"4920     WAIT 15004925     B3=B3-14930     X=INT(X+.5)4935     Y=INT(Y+.5)4940     Q(X,Y)=04945     G(Q1,Q2)=K3*100+B3*10+S34950     CALL Screen(X+1,Y*2-1)4955     PRINT USING "#,K";Deadspot$4960     GOTO 49754965     DISP "TORPEDO MISSED"4970     WAIT 5004975     CALL Decphoton(P)4980     Q1=INT(Q1+.5)4985     Q2=INT(Q2+.5)4990     CALL Quadupdate(G(*),Q1,Q2)4995     CALL Klingonupdate(K9)5000     CALL Condition(K3,E,E0,C$)5005     CALL Screen(12,1)5010     RETURN 5015 Steer: X1=-COS(C1)            ! C1 IS PRESENT HEADING OF ENTERPRISE5020     X2=SIN(C1)5025     RETURN 5030 Damage: Z=1                    ! DAMAGE CONTROL REPORT5035     CALL Clearscreen5040     PRINT "DEVICE          STATE OF REPAIR"5045     FIXED 15050     FOR I=1 TO 55055        PRINT D$[Z,Z+11],D(I)5060        Z=Z+125065     NEXT I5070     RETURN 5075 Fix:     Z=1                   ! FIX DAMAGES5080     FOR I=1 TO 55085        IF D(I)>=0 THEN 51455090        DISP D$[Z,Z+11];" NEEDS ";ABS(D(I))*100;" TO BE FIXED.  REPAIRS (Y/N)";5095        INPUT A$5100        IF (A$="N") OR (A$="n") THEN 51455105        IF (A$<>"Y") AND (A$<>"y") THEN 50905110        E=E+D(I)*1005115        CALL Energyupdate(E)5120        D(I)=05125        DISP D$[Z,Z+11];" FIXED"5130        BEEP5135        WAIT 10005140        IF (I=2) OR (I=3) THEN Fixflag=15145        Z=Z+125150     NEXT I5155     IF NOT Fixflag THEN RETURN 5160     Fixflag=05165     GOTO Scanlong5170 Deadklingon: BEEP5175     DISP "KLINGON AT SECTOR";K(I,1);"-";K(I,2);"DESTROYED!"5180     WAIT 3005185     K3=K3-15190     K9=K9-15195     Q(K(I,1),K(I,2))=05200     T1=K(I,1)5205     T2=K(I,2)5210     CALL Screen(T1+1,T2*2-1)5215     PRINT USING "#,K";Deadspot$5220     G(Q1,Q2)=K3*100+B3*10+S35225     K(I,1)=K(I,2)=05230     CALL Quadupdate(G(*),Q1,Q2)5235     CALL Klingonupdate(K9)5240     CALL Screen(12,1)5245     RETURN 5250 Attacked: ! ALL KLINGONS IN THE QUADRANT GET TO FIRE ON THE ENTERPRISE5255     IF C$="DOCKED" THEN RETURN           ! STARBASE SHIELDS PROTECT THE5260                                          !  THE ENTERPRISE5265     IF K3=0 THEN RETURN 5270     DISABLE5275     CALL Clearscreen5280     Pos=125285     FOR Count1=1 TO 95290        IF K(Count1,3)<=0 THEN 53555295        H=INT(3*K(Count1,3)/FND(Count1,K(*),S1,S2))5300        IF H>K(Count1,3) THEN H=K(Count1,3)5305        Shields=INT(Shields-H)5310        PRINT H;"UNIT HIT ON ENTERPRISE FROM KLINGON AT SECTOR";K(Count1,1);"-";K(Count1,2)5315        PRINT "(";Shields;"LEFT IN SHIELDS)"5320        Pos=Pos+25325        IF Pos<18 THEN 53405330        CALL Clearscreen5335        Pos=125340        CALL Energyupdate(E)5345        CALL Screen(Pos,1)5350        IF Shields<0 THEN RETURN 5355     NEXT Count15360     ENABLE5365     RETURN 5370 Victory: ! 5375 Defeat: PRINT PAGE;5380     DISABLE5385     IF K9<=0 THEN 54755390     DISP "YOU LOST, TURKEY!!!"5395     PRINT "CAPTAIN'S LOG"5400     PRINT "STARDATE ";T;"   ENERGY=";INT(E);"   SHIELDS=";INT(Shields);"   KLINGONS LEFT=";K95405     PRINT "THE ENTERPRISE HAS FAILED IN ITS MISSION TO DESTROY THE ADVANCE"5410     PRINT "PORTION OF THE KLINGON INVASION FORCE.  AS A RESULT, THE MAIN BODY"5415     PRINT "OF THE INVASION FORCE HAS ARRIVED.  THE GALAXY WILL BE OVERRUN"5420     PRINT "WITH KLINGONS--SUFFERING, STRIFE, WAR, AND CORRUPTION WILL RUN"5425     PRINT "RAMPANT.  I FEAR THIS WILL BE MY LAST LOG ENTRY.",LIN(1)5430     WAIT 50005435     Destruct$="KLINGONS    STRIFE    SUFFERING     WAR     CORRUPTION       DISEASE     ETC.   "5440     FOR I=1 TO 125445     Taab=INT(RND*80)5450     IF (Taab=0) OR (Taab=1) THEN Taab=25455     Help$=Destruct$[Taab,80]&Destruct$[1,Taab-1]5460     PRINT Help$5465     NEXT I5470     GOTO 10455475     PRINT "SPOCK HERE, CAPTAIN..."5480     DISP "YOU'VE DONE IT!!!"5485     PRINT "THE LAST KLINGON BATTLE CRUISER IN THE GALAXY HAS BEEN"5490     PRINT "DESTROYED, THUS INSURING THE SAFETY OF THE FEDERATION"5495     PRINT "AND ITS ALLIES.  WE HAVE JUST RECEIVED A COMMUNICATION"5500     PRINT "FROM STAR FLEET COMMAND PROMOTING YOU TO ADMIRAL."5505     PRINT LIN(1),K0;"KLINGONS IN";T-T0;"STARDATES.  RATING =";INT(5/Ability*K0/(T-T0)*1000)5510     WAIT 50005515     PRINT LIN(2),"McCOY HERE, CAPTAIN..."5520     PRINT "WELL, CAP'N, CONGRATULATIONS.  YOU'VE DONE IT AGAIN --"5525     PRINT "NO THANKS TO THE HELP OF THAT POINTY-EARED VULCAN AND HIS"5530     PRINT "DAMAGE CONTROL REPORTS!"5535     WAIT 30005540     PRINT LIN(2),"I ASSURE YOU DOCTOR, IT TAKES A TRAINED, ANALYTICAL MIND"5545     PRINT "TO BE ABLE TO ASSESS AND REPORT DUTIFULLY THE UNPLEASANT..."5550     WAIT 15005555     PRINT LIN(1),"OH STUFF IT, YOU GREEN-BLOODED HOBGOBLIN!!"5560     GOTO 10455565     END5570 Suckedup: DISABLE5575     PRINT PAGE;"SPOCK HERE, CAPTAIN...",LIN(1)5580     PRINT "WE HAVE JUST BEEN PULLED INTO A BLACK HOLE IN SPACE.  THE GRAVITATIONAL"5585     PRINT "EFFECTS WERE SUCH THAT WE HAVE ALL BEEN MASHED INTO NOTHINGNESS, AND"5590     PRINT "HAVE BEEN SQUIRTED INTO ANOTHER DIMENSION ENTIRELY.  UNFORTUNATELY,"5595     PRINT "IT IS QUITE IMPOSSIBLE FOR US TO GET BACK, AS WE NO LONGER EXIST."5600     PRINT "FASCINATING..."5605     GOTO 56405610 Lost: DISABLE5615     PRINT PAGE;"SPOCK HERE, CAPTAIN..."5620     PRINT "WE HAVE JUST CROSSED THE ENERGY BARRIER AT THE EDGE OF "5625     PRINT "THE GALAXY.  THE CROSSING CAUSED THE DILITHIUM CRYSTALS OF"5630     PRINT "THE WARP ENGINES TO BURN UP COMPLETELY.  THE SHIP IS DOOMED."5635     PRINT LIN(1)5640     FOR I=1 TO 135645     PRINT "............................................................................."5650     NEXT I5655     GOTO 10455660 ! ********************5665     SUB Rancoor(R1,R2)5670     DEG5675     R1=INT(RND*8+1)5680     R2=INT(RND*8+1)5685     SUBEND5690     SUB Screen(A,B)5695     DEG5700     ! This subprogram positions the cursor at row X, column Y5705     FIXED 05710     X=INT(A-1)5715     Y=INT(B-1)5720     IF (X<0) OR (Y<0) THEN SUBEXIT5725     S$=CHR$(27)&"&a"&VAL$(X)&"r"&VAL$(Y)&"C"5730     PRINT USING "#,K";S$5735     SUBEND5740     DEF FND(I,SHORT K(*),REAL S1,S2)5745     DEG5750     X=SQR((K(I,1)-S1)^2+(K(I,2)-S2)^2)5755     RETURN X5760     FNEND5765     SUB Decphoton(P)5770     DEG5775     CALL Screen(8,32)5780     FIXED 05785     PRINT USING "#,DD";P5790     SUBEND5795     SUB Quadupdate(INTEGER G(*),REAL Q1,Q2)5800     DEG5805     FIXED 05810     CALL Screen(Q1+1,35+Q2*5-4)5815     PRINT USING "#,DDD";G(Q1,Q2)5820     SUBEND5825     SUB Klingonupdate(K9)5830     DEG5835     CALL Screen(9,32)5840     PRINT USING "#,DD";K95845     SUBEND5850 Clearscreen:    SUB Clearscreen5855     DEG5860     CALL Screen(12,1)5865     FOR I=1 TO 75870     PRINT USING 58755875     IMAGE 80(" ")5880     NEXT I5885     CALL Screen(12,1)5890     SUBEND5895 Eup:SUB Energyupdate(E)5900     DEG5905     CALL Screen(7,30)5910     PRINT USING "#,DDDD";E5915     SUBEND5920 Kmove: SUB Kmove(I,Blackhole,Blackx,Blacky,INTEGER Q(*),SHORT K(*),REAL K3,Deadspot$,SHORT D(*))5925     DEG5930     ! Give the Klingons in the quadrant a chance to move around5935     IF RND>.5 THEN Nexti         ! 50% chance of moving5940     Signx=1-2*(RND<.5)5945     Signy=1-2*(RND<.5)5950     Oldx=K(I,1)5955     Oldy=K(I,2)5960     K(I,1)=K(I,1)+Signx*(RND<.5)5965     IF (K(I,1)>8) OR (K(I,1)<1) THEN K(I,1)=Oldx5970     K(I,2)=K(I,2)+Signy*(RND<.5)5975     IF (K(I,2)>8) OR (K(I,2)<1) THEN K(I,2)=Oldy5980     IF (K(I,1)=Oldx) AND (K(I,2)=Oldy) THEN Nexti5985     IF Q(K(I,1),K(I,2))=0 THEN Setscreen5990     K(I,1)=Oldx5995     K(I,2)=Oldy6000     GOTO Nexti6005 Setscreen: IF D(2)<0 THEN 60206010     CALL Screen(Oldx+1,Oldy*2-1)6015     PRINT USING "#,K";Deadspot$6020     Q(Oldx,Oldy)=06025     Q(K(I,1),K(I,2))=26030     IF D(2)<0 THEN Nexti6035     CALL Screen(K(I,1)+1,K(I,2)*2-1)6040     PRINT USING "#,K";"K"6045 Nexti:  CALL Screen(12,1)6050     SUBEND6055 Setcondition: SUB Condition(K3,E,E0,C$)6060     DEG6065     IF C$="DOCKED" THEN SUBEXIT6070     IF K3=0 THEN A16075     C$="   RED"6080     GOTO Printc6085 A1: IF E>.2*E0 THEN A26090     C$="YELLOW"6095     GOTO Printc6100 A2: C$=" GREEN"6105 Printc: CALL Screen(4,28)6110     PRINT USING "#,K";C$6115     SUBEND